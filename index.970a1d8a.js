class t{constructor(t,e){this.x=t,this.y=e}add(e){return new t(this.x+e.x,this.y+e.y)}sub(e){return new t(this.x-e.x,this.y-e.y)}mul(e){return new t(this.x*e,this.y*e)}div(e){return new t(this.x/e,this.y/e)}dot(t){return this.x*t.x+this.y*t.y}sqrLength(){return this.dot(this)}length(){return Math.sqrt(this.sqrLength())}normalize(){return this.div(this.length())}perpendicular(){return new t(-this.y,this.x)}}class e{constructor(t=[1,0,0,0,1,0,0,0,1]){this.elements=new Float32Array(t)}mul(s){if(s instanceof e){const t=new e;for(let e=0;e<3;e++)for(let i=0;i<3;i++){let o=0;for(let t=0;t<3;t++)o+=this.elements[3*e+t]*s.elements[3*t+i];t.elements[3*e+i]=o}return t}if(s instanceof t){const e=new t(0,0);return e.x+=this.elements[0]*s.x,e.x+=this.elements[1]*s.y,e.x+=this.elements[2],e.y+=this.elements[0]*s.x,e.y+=this.elements[1]*s.y,e.y+=this.elements[2],e}{const t=new e;for(let e=0;e<9;e++)t.elements[e]=this.elements[e]*s;return t}}transpose(){const t=new e;for(let e=0;e<3;e++)for(let s=0;s<3;s++)t.elements[3*e+s]=this.elements[3*s+e];return t}static identity(){return new e}static translation(t){return new e([1,0,0,0,1,0,t.x,t.y,1])}static scale(t){return new e([t.x,0,0,0,t.y,0,0,0,1])}}class s{constructor(e,s){this.position=new t(0,0),this.scale=1,this.aspectRatio=s/e,this.updateTransform()}getTransform(){return this.transform}setPosition(t){this.position=t,this.updateTransform()}setScale(t){this.scale=t,this.updateTransform()}move(t){this.setPosition(this.position.add(t.div(this.scale)))}zoom(t){this.setScale(this.scale/t)}updateTransform(){const s=e.translation(new t(this.position.x,this.position.y)),i=e.scale(new t(this.scale*this.aspectRatio,this.scale));this.transform=s.mul(i)}}class i{constructor(t,e,s,i=1){this.r=t,this.g=e,this.b=s,this.a=i}add(t){const e=Math.min(1,this.r+t.r),s=Math.min(1,this.g+t.g),o=Math.min(1,this.b+t.b),r=Math.min(1,this.a+t.a);return new i(e,s,o,r)}mix(t){const e=(this.r+t.r)/2,s=(this.g+t.g)/2,o=(this.b+t.b)/2,r=(this.a+t.a)/2;return new i(e,s,o,r)}mul(t){const e=Math.min(1,this.r*t),s=Math.min(1,this.g*t),o=Math.min(1,this.b*t);return new i(e,s,o,this.a)}div(t){return this.mul(1/t)}static random(){return new i(Math.random(),Math.random(),Math.random())}}class o{constructor(t,e,s){this.center=t,this.radius=e,this.color=s}}const r=new i(0,0,0);class n{constructor(t){this.commands=[],this.context=t.getContext("webgl"),this.initShaders(),this.initVertexBuffers(),this.view=new s(t.width,t.height)}drawCircle(t,e,s){this.commands.push(new o(t,e,s))}zoom(t){this.view.zoom(t)}move(t){this.view.move(t)}flush(){this.context.clearColor(r.r,r.g,r.b,1),this.context.clear(this.context.COLOR_BUFFER_BIT),this.context.bindBuffer(this.context.ARRAY_BUFFER,this.vertexBuffer),this.context.vertexAttribPointer(this.positionAttribute,2,this.context.FLOAT,!1,0,0),this.context.enableVertexAttribArray(this.positionAttribute),this.context.useProgram(this.program);for(let s of this.commands)if(s instanceof o){const i=e.translation(s.center),o=e.scale(new t(s.radius,s.radius)).mul(i).mul(this.view.getTransform());this.context.uniformMatrix3fv(this.transformUniform,!1,o.elements),this.context.uniform3f(this.colorUniform,s.color.r,s.color.g,s.color.b),this.context.drawArrays(this.context.TRIANGLE_FAN,this.circle[0],this.circle[1])}this.commands=[]}initShaders(){this.vertexShader=this.context.createShader(this.context.VERTEX_SHADER),this.context.shaderSource(this.vertexShader,"\n      attribute vec2 position;\n\n      uniform mat3 transform;\n\n      void main() {\n        vec2 transformed = (transform * vec3(position, 1.0)).xy;\n        gl_Position = vec4(transformed, 0.0, 1.0);\n      }\n    "),this.context.compileShader(this.vertexShader),this.fragmentShader=this.context.createShader(this.context.FRAGMENT_SHADER),this.context.shaderSource(this.fragmentShader,"\n      uniform mediump vec3 color;\n\n      void main() {\n        gl_FragColor = vec4(color, 1.0);\n      }\n    "),this.context.compileShader(this.fragmentShader),this.program=this.context.createProgram(),this.context.attachShader(this.program,this.vertexShader),this.context.attachShader(this.program,this.fragmentShader),this.context.linkProgram(this.program),this.positionAttribute=this.context.getAttribLocation(this.program,"position"),this.transformUniform=this.context.getUniformLocation(this.program,"transform"),this.colorUniform=this.context.getUniformLocation(this.program,"color")}initVertexBuffers(){this.circle=[0,34];let t=[];t.push(0,0);for(let e=0;e<=32;e++){let s=e/32*Math.PI*2;t.push(Math.cos(s),Math.sin(s))}this.vertexBuffer=this.context.createBuffer(),this.context.bindBuffer(this.context.ARRAY_BUFFER,this.vertexBuffer),this.context.bufferData(this.context.ARRAY_BUFFER,new Float32Array(t),this.context.STATIC_DRAW)}}class h{constructor(t,e,s,i){this.setMass(t),this.position=e,this.velocity=s,this.color=i}getMass(){return this.mass}getRadius(){return this.radius}getPosition(){return this.position}getVelocity(){return this.velocity}getColor(){return this.color}setMass(t){this.mass=t,this.radius=.75*Math.PI*this.mass**(1/3)/100}applyForce(t,e){this.velocity=this.velocity.add(t.mul(e/this.mass))}update(t){this.position=this.position.add(this.velocity.mul(t))}collides(t){return this.position.sub(t.position).sqrLength()<=(this.radius+t.radius)**2}merge(t){const e=this.mass+t.mass,s=this.mass>t.mass?this.position:t.position,i=this.velocity.mul(this.mass).add(t.velocity.mul(t.mass)).div(e),o=this.color.mul(this.mass/e),r=t.color.mul(t.mass/e),n=o.add(r);return new h(e,s,i,n)}}class a{constructor(){this.bodies=[]}addBody(t,e,s){this.bodies.push(new h(t,e,s,i.random().add(new i(.1,.1,.1))))}update(t){for(let e=0;e<this.bodies.length;e++)this.bodies[e].update(t);for(let e=0;e<this.bodies.length;e++)for(let s=e+1;s<this.bodies.length;s++){const i=this.bodies[e],o=this.bodies[s],r=i.getPosition().sub(o.getPosition()),n=r.sqrLength(),h=r.normalize().mul(1e-6*i.getMass()*o.getMass()/n);this.bodies[s].applyForce(h,t),this.bodies[e].applyForce(h.mul(-1),t)}for(let t=0;t<this.bodies.length;t++)for(let e=t+1;e<this.bodies.length;e++)this.bodies[t].collides(this.bodies[e])&&(this.bodies[t]=this.bodies[t].merge(this.bodies[e]),this.bodies.splice(e,1))}draw(t){for(let e=0;e<this.bodies.length;e++)t.drawCircle(this.bodies[e].getPosition(),this.bodies[e].getRadius(),this.bodies[e].getColor())}}const c=document.getElementById("canvas");c.width=window.innerWidth,c.height=window.innerHeight;const l=new class{constructor(e){this.renderer=new n(e),this.world=new a;this.world.addBody(1e4,new t(0,0),new t(0,0));for(let e=0;e<1e3;++e){const e=Math.random()*Math.PI*2,s=7*Math.random()+1,i=new t(Math.cos(e)*s,Math.sin(e)*s),o=i.perpendicular().normalize().mul(Math.sqrt(.01/s));this.world.addBody(1,i,o)}}draw(){this.world.draw(this.renderer),this.renderer.flush()}update(t){this.world.update(.001*t)}zoom(t){this.renderer.zoom(t)}move(t){this.renderer.move(t)}}(c);let d=!1,m=new t(0,0);c.addEventListener("mousedown",(e=>{1==e.button&&(d=!0,m=new t(e.offsetX,e.offsetY)),e.preventDefault()}),!1),c.addEventListener("mousemove",(e=>{if(d){const s=new t(e.offsetX,e.offsetY);let i=s.sub(m);i.y=-i.y,m=s,l.move(i.mul(.001))}e.preventDefault()}),!1),c.addEventListener("mouseup",(t=>{1==t.button&&(d=!1),t.preventDefault()}),!1),c.addEventListener("wheel",(t=>{t.deltaY>0?l.zoom(1.1):l.zoom(.9),t.preventDefault()}),!1);let u=0;window.requestAnimationFrame((function t(e){const s=e-u;u=e,l.update(s),l.draw(),window.requestAnimationFrame(t)}));
//# sourceMappingURL=index.970a1d8a.js.map
